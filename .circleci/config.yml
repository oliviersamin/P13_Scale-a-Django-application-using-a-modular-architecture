# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0

jobs:
  compile-linting-tests:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - save_cache:
          paths:
            - /cache
          key: 
            p13-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Run Linting
          command: flake8 --exclude=env,migrations
      - run:
          name: Run tests
          # This assumes pytest is installed via the install-package step above
          command: pytest

  build_docker_image:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key:
            p13-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - python/install-packages:
          pkg-manager: pip
      - run:
          name: build customized image
          command:
            TAG=$CIRCLE_BUILD_NUM
            docker build -t test_build




# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  project_13: 
    jobs:
      - compile-linting-tests
      - build_docker_image:
          requires: 
            - compile-linting-tests